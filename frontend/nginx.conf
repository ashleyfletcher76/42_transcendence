worker_processes 1;

events { 
    worker_connections 1024; 
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout 65;

	ssl_trusted_certificate /etc/ssl/certs/server.crt;  # Path to the self-signed cert

    server {
        listen 80;
        server_name localhost;  # Change this to your domain if necessary

        # Serve Ember app from root
        location / {
            root /usr/share/nginx/html;  # This should match where your Ember app is built
            try_files $uri $uri/ /index.html;  # Fallback to index.html for SPA routing
        }

        # Proxy requests to API 1
        location /api1/ {
            proxy_pass https://host.docker.internal:9443/;  # API 1 (register) running on port 9443
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy requests to API 2
        location /api2/ {
            proxy_pass https://host.docker.internal:8443/;  # API 2 running on port 8443 (auth)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

		# Proxy requests to API 2
        location /api3/ {
            proxy_pass https://host.docker.internal:8000/;  # API 2 running on port 8443 (auth)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle SSL verification for upstream requests if needed
        proxy_ssl_verify off;  # Not recommended for production; use a valid certificate instead (see line 14)
    }
}
