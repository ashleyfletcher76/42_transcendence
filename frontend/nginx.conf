worker_processes 1;

events {
	worker_connections 1024;
}

http {
	include				mime.types;
	default_type		application/octect-stream;

	sendfile			on;
	keepalive_timeout	65;

	# HTTPS server
	server {
		listen						443 ssl;
		server_name					localhost;

		ssl_certificate				/etc/ssl/certs/server.crt;
		ssl_certificate_key			/etc/ssl/certs/server.key;
		ssl_protocols				TLSv1.2 TLSv1.3;
		ssl_prefer_server_ciphers	on;

		# serve Ember app from the root
		location / {
			root	/usr/share/nginx/html;
			try_files	$uri $uri/ /index.html;
		}
		# proxy request for register API
		location /ap1/ {
			proxy_pass https://host.docker.internal:9443/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		# proxy requests to auth API
		location /api2/ {
			proxy_pass https://host.docker.internal:8443/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		# proxy requests to chat API
		location /api3/ {
			proxy_pass https://host.docker.internal:10443/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		# disable SSL verification for testing
		proxy_ssl_verify off;
	}

	# redirect HTTP to HTTPS
	server {
		listen			80;
		server_name		localhost;
		return 301		https://$host$request_uri;
	}
}

# http {
# 	include				mime.types;
# 	default_type		application/octect-stream;

# 	sendfile			on;
# 	keepalive_timeout	65;

# 	# HTTPS server
# 	server {
# 		listen						443 ssl;
# 		server_name					localhost;

# 		ssl_certificate				/etc/nginx/ssl/cert.pem;
# 		ssl_certificate_key			/etc/nginx/ssl/key.pem;
# 		ssl_protocols				TLSv1.2 TLSv1.3;
# 		ssl_prefer_server_ciphers	on;

# 		# serve Ember app from the root
# 		location / {
# 			root	/usr/share/nginx/html;
# 			try_files	$uri $uri/ /index.html;
# 		}

# 		# proxy requests to auth API
# 		location /auth/ {
# 			proxy_pass https://host.docker.internal:8443/;
# 			proxy_set_header Host $host;
# 			proxy_set_header X-Real-IP $remote_addr;
# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 			proxy_set_header X-Forwarded-Proto $scheme;
# 		}

# 		# proxy request for register API
# 		location /register/ {
# 			proxy_pass https://host.docker.internal:9443/;
# 			proxy_set_header Host $host;
# 			proxy_set_header X-Real-IP $remote_addr;
# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 			proxy_set_header X-Forwarded-Proto $scheme;
# 		}

# 		# proxy requests to chat API
# 		location /chat/ {
# 			proxy_pass https://host.docker.internal:10443/;
# 			proxy_set_header Host $host;
# 			proxy_set_header X-Real-IP $remote_addr;
# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 			proxy_set_header X-Forwarded-Proto $scheme;
# 		}

# 		# proxy requests to game API
# 		location /pong/ {
# 			proxy_pass https://host.docker.internal:11443/;
# 			proxy_set_header Host $host;
# 			proxy_set_header X-Real-IP $remote_addr;
# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 			proxy_set_header X-Forwarded-Proto $scheme;
# 		}

# 		# disable SSL verification for testing
# 		proxy_ssl_verify off;
# 	}

# 	# redirect HTTP to HTTPS
# 	server {
# 		listen			80;
# 		server_name		localhost;
# 		return 301		https://$host$request_uri;
# 	}
# }

# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     sendfile        on;
#     keepalive_timeout 65;

# 	ssl_trusted_certificate /etc/ssl/certs/server.crt;  # Path to the self-signed cert

#     server {
#         listen 80;
#         server_name localhost;  # Change this to your domain if necessary

#         # Serve Ember app from root
#         location / {
#             root /usr/share/nginx/html;  # This should match where your Ember app is built
#             try_files $uri $uri/ /index.html;  # Fallback to index.html for SPA routing
#         }

#         # Proxy requests to API 1
#         location /api1/ {
#             proxy_pass https://host.docker.internal:9443/;  # API 1 (register) running on port 9443
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Proxy requests to API 2
#         location /api2/ {
#             proxy_pass https://host.docker.internal:8443/;  # API 2 running on port 8443 (auth)
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

# 		# Proxy requests to API 2
#         location /api3/ {
#             proxy_pass https://host.docker.internal:8000/;  # API 2 running on port 8443 (auth)
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Handle SSL verification for upstream requests if needed
#         proxy_ssl_verify off;  # Not recommended for production; use a valid certificate instead (see line 14)
#     }
# }
